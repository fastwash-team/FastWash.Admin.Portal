/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/Authentication/login/initiate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["InitiateLoginDTO"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Authentication/login/complete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["CompleteLoginDTO"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Authentication/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["UserData"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hooks/Paystack/process": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Profiles/profile/external": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ApplicationUserDTO"];
                        "application/json": components["schemas"]["ApplicationUserDTO"];
                        "text/json": components["schemas"]["ApplicationUserDTO"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Profiles/profile/internal": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ApplicationUserDTO"];
                        "application/json": components["schemas"]["ApplicationUserDTO"];
                        "text/json": components["schemas"]["ApplicationUserDTO"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Profiles/internal/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ApplicationUserDTO"];
                        "application/json": components["schemas"]["ApplicationUserDTO"];
                        "text/json": components["schemas"]["ApplicationUserDTO"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Profiles/{userId}/external": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    userId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ApplicationUserData"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Profiles/{userId}/internal": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    userId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ApplicationUserData"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/TransactionHistories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageIndex?: number;
                    pageSize?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["InternalTransactionHistoryDTOPaginatedList"];
                        "application/json": components["schemas"]["InternalTransactionHistoryDTOPaginatedList"];
                        "text/json": components["schemas"]["InternalTransactionHistoryDTOPaginatedList"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrderPlans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageIndex?: number;
                    pageSize?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["InternalWashOrderPlanDTOPaginatedList"];
                        "application/json": components["schemas"]["InternalWashOrderPlanDTOPaginatedList"];
                        "text/json": components["schemas"]["InternalWashOrderPlanDTOPaginatedList"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["WashOrderPlanCreationDTO"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrderPlans/servicetype": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    serviceType?: components["schemas"]["ServiceType"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ExternalWashOrderPlanDTO"][];
                        "application/json": components["schemas"]["ExternalWashOrderPlanDTO"][];
                        "text/json": components["schemas"]["ExternalWashOrderPlanDTO"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrderPlans/filter": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    location?: string;
                    fromLogisticsAmount?: number;
                    toLogisticsAmount?: number;
                    serviceType?: components["schemas"]["ServiceType"];
                    scheduleStartDate?: string;
                    scheduleEndDate?: string;
                    pageIndex?: number;
                    pageSize?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["InternalWashOrderPlanDTOPaginatedList"];
                        "application/json": components["schemas"]["InternalWashOrderPlanDTOPaginatedList"];
                        "text/json": components["schemas"]["InternalWashOrderPlanDTOPaginatedList"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    pageIndex?: number;
                    pageSize?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WashOrderDTOPaginatedList"];
                        "application/json": components["schemas"]["WashOrderDTOPaginatedList"];
                        "text/json": components["schemas"]["WashOrderDTOPaginatedList"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["WashOrderCreationDTO"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrders/payment/initiate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["InitializeTransactionDTO"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrders/order/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["WashOrderStatusUpdateDTO"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrders/order/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WashOrderCountDTO"];
                        "application/json": components["schemas"]["WashOrderCountDTO"];
                        "text/json": components["schemas"]["WashOrderCountDTO"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrders/order/received/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WashOrderReceivedCountDTO"];
                        "application/json": components["schemas"]["WashOrderReceivedCountDTO"];
                        "text/json": components["schemas"]["WashOrderReceivedCountDTO"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrders/searchwashstatus": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    status?: components["schemas"]["SearchWashStatus"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WashOrderDTO"][];
                        "application/json": components["schemas"]["WashOrderDTO"][];
                        "text/json": components["schemas"]["WashOrderDTO"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrders/order/{orderId}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    orderId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WashOrderStatusDTO"][];
                        "application/json": components["schemas"]["WashOrderStatusDTO"][];
                        "text/json": components["schemas"]["WashOrderStatusDTO"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrders/payment/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TransactionHistoryDTO"][];
                        "application/json": components["schemas"]["TransactionHistoryDTO"][];
                        "text/json": components["schemas"]["TransactionHistoryDTO"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrders/filter": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    location?: string;
                    orderNotes?: string;
                    fromOrderAmount?: number;
                    toOrderAmount?: number;
                    washStatus?: components["schemas"]["WashStatus"];
                    serviceType?: components["schemas"]["ServiceType"];
                    orderStartDate?: string;
                    orderEndDate?: string;
                    pageIndex?: number;
                    pageSize?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["WashOrderDTOPaginatedList"];
                        "application/json": components["schemas"]["WashOrderDTOPaginatedList"];
                        "text/json": components["schemas"]["WashOrderDTOPaginatedList"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrders/{orderId}/add/assignee": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: {
                    assigneeId?: string;
                };
                header?: never;
                path: {
                    orderId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrders/{orderId}/add/additionalorder": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    orderId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["WashOrderUpdateDTO"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrders/{orderId}/additionalorder/internal": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    orderId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["AdditionalWashOrderDTO"];
                        "application/json": components["schemas"]["AdditionalWashOrderDTO"];
                        "text/json": components["schemas"]["AdditionalWashOrderDTO"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrders/{orderId}/additionalorder/external": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    orderId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["AdditionalWashOrderDTO"];
                        "application/json": components["schemas"]["AdditionalWashOrderDTO"];
                        "text/json": components["schemas"]["AdditionalWashOrderDTO"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/WashOrders/{orderId}/add/complaint": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    orderId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["WashOrderComplaintDTO"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AdditionalWashOrderDTO: {
            washStatus?: components["schemas"]["WashStatus"];
            /** Format: int32 */
            totalWashItems?: number;
            washItemData?: components["schemas"]["WashItemData"][] | null;
        };
        ApplicationUserDTO: {
            userEmail?: string | null;
            userPhoneNumber?: string | null;
            userName?: string | null;
            /** Format: int32 */
            applicationUserId?: number;
            userType?: components["schemas"]["UserType"];
            userStatus?: components["schemas"]["UserStatus"];
        };
        ApplicationUserData: {
            userEmail?: string | null;
            userPhoneNumber?: string | null;
            userName?: string | null;
        };
        CompleteLoginDTO: {
            passCode: string;
        };
        ExternalWashOrderPlanDTO: {
            location?: string | null;
            washOrderPlanData?: components["schemas"]["WashOrderPlanData"][] | null;
        };
        InitializeTransactionDTO: {
            email: string;
            /** Format: double */
            amount: number;
            reference: string;
        };
        InitiateLoginDTO: {
            userId: string;
            isSystemInitiated: boolean;
        };
        InternalTransactionHistoryDTO: {
            transactionReference?: string | null;
            /** Format: double */
            transactionAmount?: number;
            transactionChannel?: components["schemas"]["TransactionChannel"];
            transactionStatus?: components["schemas"]["TransactionStatus"];
            /** Format: date-time */
            dateCreated?: string | null;
            washOrderReference?: string | null;
            transactionTag?: components["schemas"]["TransactionTag"];
            washOrder?: components["schemas"]["WashOrderDTO"];
        };
        InternalTransactionHistoryDTOPaginatedList: {
            data?: components["schemas"]["InternalTransactionHistoryDTO"][] | null;
            /** Format: int32 */
            pageCount?: number;
            /** Format: int32 */
            pageIndex?: number;
            /** Format: int32 */
            pageSize?: number;
        };
        InternalWashOrderPlanDTO: {
            washOrderPlanReference?: string | null;
            scheduleStartTime?: string | null;
            scheduleEndTime?: string | null;
            /** Format: int32 */
            numberOfOrders?: number;
            /** Format: date-time */
            scheduleDate?: string | null;
            /** Format: int32 */
            totalWashOrders?: number;
            /** Format: double */
            totalWashOrdersAmount?: number | null;
            /** Format: double */
            totalLogisticsAmount?: number | null;
            location?: string | null;
            /** Format: double */
            logisticsAmount?: number;
            serviceType?: components["schemas"]["ServiceType"];
            /** Format: date-time */
            dateCreated?: string | null;
            washOrders?: components["schemas"]["WashOrderDTO"][] | null;
        };
        InternalWashOrderPlanDTOPaginatedList: {
            data?: components["schemas"]["InternalWashOrderPlanDTO"][] | null;
            /** Format: int32 */
            pageCount?: number;
            /** Format: int32 */
            pageIndex?: number;
            /** Format: int32 */
            pageSize?: number;
        };
        ProblemDetails: {
            type?: string | null;
            title?: string | null;
            /** Format: int32 */
            status?: number | null;
            detail?: string | null;
            instance?: string | null;
        } & {
            [key: string]: unknown;
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        SearchWashStatus: 1 | 2;
        /**
         * Format: int32
         * @enum {integer}
         */
        ServiceType: 1 | 2;
        SharedTransactionData: {
            transactionReference: string;
            /** Format: double */
            transactionAmount: number;
            transactionTag: components["schemas"]["TransactionTag"];
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        TransactionChannel: 1 | 2 | 3;
        TransactionData: {
            transactionReference: string;
            /** Format: double */
            transactionAmount: number;
            transactionTag: components["schemas"]["TransactionTag"];
            transactionChannel: components["schemas"]["TransactionChannel"];
        };
        TransactionHistoryDTO: {
            transactionReference?: string | null;
            /** Format: double */
            transactionAmount?: number;
            transactionChannel?: components["schemas"]["TransactionChannel"];
            transactionStatus?: components["schemas"]["TransactionStatus"];
            /** Format: date-time */
            dateCreated?: string | null;
            washOrderReference?: string | null;
            transactionTag?: components["schemas"]["TransactionTag"];
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        TransactionStatus: 1 | 2 | 3;
        /**
         * Format: int32
         * @enum {integer}
         */
        TransactionTag: 1 | 2;
        UserData: {
            fullName: string;
            /** Format: email */
            email: string;
            phoneNumber: string;
            userType: components["schemas"]["UserType"];
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        UserStatus: 1 | 2;
        /**
         * Format: int32
         * @enum {integer}
         */
        UserType: 1 | 2 | 3 | 4;
        WashItemData: {
            itemName: string;
            /** Format: int32 */
            numberOfItem: number;
            /** Format: double */
            itemAmount: number;
        };
        WashOrderComplaintDTO: {
            complaintNote: string;
        };
        WashOrderCountDTO: {
            /** Format: int32 */
            activeOrders?: number;
            /** Format: int32 */
            completedOrders?: number;
        };
        WashOrderCreationDTO: {
            streetAddress: string;
            location: string;
            /** Format: date-time */
            orderDate: string;
            serviceType: components["schemas"]["ServiceType"];
            orderNote?: string | null;
            estimatedDeliveryTime: string;
            pickupTime: string;
            /** Format: double */
            logisticsAmount: number;
            washItemData: components["schemas"]["WashItemData"][];
            userData: components["schemas"]["UserData"];
            transactionData: components["schemas"]["TransactionData"];
        };
        WashOrderDTO: {
            /** Format: int32 */
            washOrderId: number;
            washOrderReference?: string | null;
            washStatus?: components["schemas"]["WashStatus"];
            serviceType?: components["schemas"]["ServiceType"];
            /** Format: date-time */
            orderDate?: string | null;
            /** Format: date-time */
            dateCreated?: string | null;
            location?: string | null;
            /** Format: double */
            orderAmount?: number;
            orderNote?: string | null;
            complaintNote?: string | null;
            washOrderData?: components["schemas"]["WashOrderCreationDTO"];
        };
        WashOrderDTOPaginatedList: {
            data?: components["schemas"]["WashOrderDTO"][] | null;
            /** Format: int32 */
            pageCount?: number;
            /** Format: int32 */
            pageIndex?: number;
            /** Format: int32 */
            pageSize?: number;
        };
        WashOrderPlanCreationDTO: {
            serviceType: components["schemas"]["ServiceType"];
            washOrderPlanCreationData: components["schemas"]["WashOrderPlanCreationData"][];
        };
        WashOrderPlanCreationData: {
            scheduleStartTime: string;
            scheduleEndTime: string;
            /** Format: double */
            logisticsAmount: number;
            /** Format: date-time */
            scheduleDate: string;
            location: string;
            /** Format: int32 */
            numberOfOrders?: number;
        };
        WashOrderPlanData: {
            scheduleStartTime: string;
            scheduleEndTime: string;
            /** Format: double */
            logisticsAmount: number;
            /** Format: date-time */
            scheduleDate: string;
        };
        WashOrderReceivedCountDTO: {
            /** Format: int32 */
            preScheduledOrders?: number;
            /** Format: int32 */
            classicOrders?: number;
            /** Format: int32 */
            allOrders?: number;
        };
        WashOrderStatusDTO: {
            washStatus?: components["schemas"]["WashStatus"];
            statusNotes?: string | null;
            /** Format: date-time */
            dateCreated?: string | null;
        };
        WashOrderStatusUpdateDTO: {
            /** Format: int32 */
            washOrderId: number;
            washStatus: components["schemas"]["WashStatus"];
        };
        WashOrderUpdateDTO: {
            sharedTransactionData: components["schemas"]["SharedTransactionData"];
            washItemData: components["schemas"]["WashItemData"][];
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        WashStatus: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
